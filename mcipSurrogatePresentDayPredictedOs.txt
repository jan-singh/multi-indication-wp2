model
{
    for (i in 1:nStudies) {

        # y1[i]     - observed mean treatment effect (e.g., log hazard ratio) on surrogate endpoint for study 'i'
	# y2[i]     - observed mean treatment effect (e.g., log hazard ratio) on final endpoint for study 'i'
	# sigma1[i] - observed standard error on surrogate endpoint for study 'i'
	# sigma2[i] - observed standard error on final endpoints for study 'i'
	# rhoW      - within-study correlation between endpoints
        
	# WITHIN-STUDY MODEL
	Y[i, 1] <- y1[i]
        Y[i, 2] <- y2[i]
        Y[i, 1:2] ~ dmnorm(Mu[i, 1:2], prec.Y[i, 1:2, 1:2])
        
	prec.Y[i, 1:2, 1:2] <- inverse(Sigma.Y[i, 1:2, 1:2])
        Sigma.Y[i, 1, 1] <- pow(sigma1[i], 2)
        Sigma.Y[i, 2, 2] <- pow(sigma2[i], 2)
        Sigma.Y[i, 1, 2] <- sqrt(Sigma.Y[i, 1, 1]) * sqrt(Sigma.Y[i, 
            2, 2]) * rhoW
        Sigma.Y[i, 2, 1] <- sqrt(Sigma.Y[i, 1, 1]) * sqrt(Sigma.Y[i, 
            2, 2]) * rhoW
        
	# BETWEEN-STUDIES SURROGACY MODEL (product Normal formulation)
	# Mu[i, 1]         - true effect on surrogate endpoint for study 'i'
	# Mu[i, 2]         - true effect on final endpoint for study 'i'
	# lambda0[j]       - intercept for indication 'j'
	# lambda1[j]       - slope for indication 'j'
	# psi[j]           - conditional variance for indication 'j'
	# indicationNum[i] - to identify which indication study 'i' belongs to
	Mu[i, 1] ~ dnorm(0.00000E+00, 0.001)
        Mu[i, 2] ~ dnorm(eta[i], prec.mu[indicationNum[i]])
        eta[i] <- lambda0[indicationNum[i]] + (lambda1[indicationNum[i]] * 
            Mu[i, 1])
        
	# residual deviance for study 'i'
        resdev[i] <- inprod(pres[i, 1:2], res[i, 1:2])
        for (k in 1:2) {
            res[i, k] <- Y[i, k] - Mu[i, k]
            pres[i, k] <- inprod(prec.Y[i, k, 1:2], res[i, 1:2])
        }
    }
    
    # overall residual deviance for absolute assessment of model fit
    totresdev <- sum(resdev[])
    
    for (j in 1:nIndications) {
        
	# BETWEEN-INDICATIONS MODEL (mixed common and independent surrogacy parameters)
        # when c0[j] = 1, ifBranch0[j] = 1, common effect
	# when c0[j] = 0, ifBranch0[j] = 2, independent effect
	# The posterior mean of c0[j] represents the mixture probability for the intercept corresponding to indication 'j'
        prec.mu[j] <- 1/pow(psi[j], 2)
        c0[j] ~ dbern(p0[j])
        p0[j] ~ dbeta(1, 1)
        ifBranch0[j] <- 1 + step(-(c0[j] - 0.5))
        branch0[j, 1] <- mLambda0
        branch0[j, 2] ~ dnorm(0.00000E+00, 0.001)
        lambda0[j] <- branch0[j, ifBranch0[j]]
        c1[j] ~ dbern(p1[j])
        p1[j] ~ dbeta(1, 1)
        ifBranch1[j] <- 1 + step(-(c1[j] - 0.5))
        branch1[j, 1] <- mLambda1
        branch1[j, 2] ~ dnorm(0.00000E+00, 0.001)
        lambda1[j] <- branch1[j, ifBranch1[j]]
        c2[j] ~ dbern(p2[j])
        p2[j] ~ dbeta(1, 1)
        ifBranch2[j] <- 1 + step(-(c2[j] - 0.5))
        branch2[j, 1] <- mPsi
        branch2[j, 2] ~ dnorm(0.00000E+00, 4)  I(0.00000E+00,)
        psi[j] <- branch2[j, ifBranch2[j]]
    }

    rhoW ~ dunif(0.00000E+00, 0.999)
    mLambda0 ~ dnorm(0.00000E+00, 0.001)
    mLambda1 ~ dnorm(0.00000E+00, 0.001)
    mPsi ~ dnorm(0.00000E+00, 4)  I(0.00000E+00, )

    # predicting an effect on the final endpoint ('predOs') using the observed effect on the surrogate endpoint ('obsPfs', 'sePfs') by applying the surrogacy equation
    for (k in 1:nPredictions) {
        truePfs[k] ~ dnorm(obsPfs[k], precPfs[k])
        precPfs[k] <- pow(sePfs[k], -2)
        predOs[k] <- lambda0[predIndicationNum[k]] + (lambda1[predIndicationNum[k]] * truePfs[k])
    }
}

# This data set corresponds to the data available at present-day on both Progression-free Survival (PFS) and Overall Survival (OS), which is used to estimate the surrogate relationship.
# It also contains the indication-level pooled PFS effects ('obsPfs', 'sePfs') which are entered into the surrogacy equation to predict indication-level OS effects
list(nStudies=3.80000E+01, y1=c(-6.16186E-01, -6.93147E-01, -4.94296E-01, -1.86330E-01, -4.78036E-01, -9.43107E-02, -8.20981E-01, -4.00478E-01, -6.34878E-01, -4.94296E-01, -4.00478E-01, -5.10826E-01, -3.71064E-01, -4.46287E-01, -2.48461E-01, -2.61365E-01, -4.94296E-01, -1.86330E-01, -3.85662E-01, -2.87682E-01, -3.14711E-01, -4.15515E-01, -1.62519E-01, -9.16291E-01, -6.53926E-01, -1.27833E-01, -2.57476E-01, -2.61365E-01, -7.25707E-02, -7.25670E-01, -7.33969E-01, -4.65215E-01, 1.13329E-01, -5.97837E-01, -3.85662E-01, -2.35722E-01, -4.46287E-01, -7.13350E-01), sigma1=c(1.90253E-01, 1.94923E-01, 1.23854E-01, 7.07170E-02, 1.21844E-01, 6.44649E-02, 1.80905E-01, 7.55780E-02, 1.32789E-01, 9.14882E-02, 8.32644E-02, 1.54574E-01, 1.03435E-01, 1.09894E-01, 9.53358E-02, 9.53358E-02, 1.67975E-01, 1.24758E-01, 1.47713E-01, 1.07583E-01, 2.68108E-01, 7.67230E-02, 8.02834E-02, 1.58594E-01, 1.97802E-01, 2.28222E-01, 1.63068E-01, 6.24824E-02, 5.99795E-02, 1.13322E-01, 1.16520E-01, 8.28832E-02, 4.66359E-01, 4.92911E-01, 1.03435E-01, 9.02143E-02, 7.56969E-02, 1.14110E-01), y2=c(-4.15515E-01, -2.35722E-01, -2.87682E-01, -1.16534E-01, -1.27833E-01, 4.87902E-02, -4.78036E-01, -1.86330E-01, -2.35722E-01, -1.50823E-01, -1.50823E-01, -1.27833E-01, -1.62519E-01, 2.95588E-02, -1.05361E-01, 2.95588E-02, -5.97837E-01, -1.39262E-01, -2.10721E-01, -4.08220E-02, 8.61777E-02, -2.35722E-01, 2.95588E-02, -3.85662E-01, -2.10721E-01, 7.69610E-02, 6.97561E-03, -4.08220E-02, -1.00503E-02, -4.91902E-02, -1.62519E-01, -1.87535E-01, 3.85262E-01, -2.61365E-01, -2.61365E-01, 1.22218E-01, -1.27833E-01, -5.12933E-02), sigma2=c(1.22340E-01, 1.72227E-01, 8.81382E-02, 7.75499E-02, 1.29561E-01, 7.47861E-02, 2.14363E-01, 7.95998E-02, 1.65382E-01, 9.38073E-02, 1.04597E-01, 8.92590E-02, 1.51292E-01, 1.48839E-01, 1.20796E-01, 1.63738E-01, 2.29337E-01, 2.09785E-01, 1.45729E-01, 1.18637E-01, 2.99064E-01, 8.08918E-02, 9.12850E-02, 1.58310E-01, 2.14768E-01, 3.01982E-01, 1.99737E-01, 6.34430E-02, 7.48845E-02, 1.08134E-01, 1.25632E-01, 9.85326E-02, 4.91146E-01, 4.96406E-01, 1.08863E-01, 9.88218E-02, 7.50611E-02, 1.25440E-01), nIndications=7.00000E+00, indicationNum=c(1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 2.00000E+00, 2.00000E+00, 3.00000E+00, 3.00000E+00, 3.00000E+00, 3.00000E+00, 3.00000E+00, 3.00000E+00, 3.00000E+00, 3.00000E+00, 3.00000E+00, 3.00000E+00, 4.00000E+00, 4.00000E+00, 4.00000E+00, 4.00000E+00, 4.00000E+00, 4.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 6.00000E+00, 7.00000E+00, 7.00000E+00, 7.00000E+00), obsPfs=c(-2.35722E-01, -4.46287E-01, -7.13350E-01, -4.60000E-01, -4.30000E-01, -3.70000E-01, -3.80000E-01, -4.10000E-01, -4.10000E-01, -3.40000E-01, -3.50000E-01, -3.90000E-01, -3.90000E-01), sePfs=c(9.02143E-02, 7.56969E-02, 1.14110E-01, 2.30000E-01, 5.00000E-02, 4.00000E-02, 4.00000E-02, 9.00000E-02, 9.00000E-02, 2.00000E-02, 2.00000E-02, 4.00000E-02, 4.00000E-02), predIndicationNum=c(7.00000E+00, 7.00000E+00, 7.00000E+00, 7.00000E+00, 7.00000E+00, 7.00000E+00, 7.00000E+00, 7.00000E+00, 7.00000E+00, 7.00000E+00, 7.00000E+00, 7.00000E+00, 7.00000E+00), nPredictions=1.30000E+01)

# Initial values (3 chains)
list(Mu= structure(.Data= c(0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00), .Dim=c(38, 2)), rhoW=5.00000E-01, branch0= structure(.Data= c(    NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00), .Dim=c(7, 2)), branch1= structure(.Data= c(    NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00), .Dim=c(7, 2)), branch2= structure(.Data= c(    NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00), .Dim=c(7, 2)), mPsi=1.00000E+00, mLambda0=0.00000E+00, mLambda1=0.00000E+00, p0=c(5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01), p1=c(5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01), p2=c(5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01), c0=c(1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00), c1=c(1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00), c2=c(1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00), truePfs=c(0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00))

list(Mu= structure(.Data= c(5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00), .Dim=c(38, 2)), rhoW=1.00000E-03, branch0= structure(.Data= c(    NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00), .Dim=c(7, 2)), branch1= structure(.Data= c(    NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00), .Dim=c(7, 2)), branch2= structure(.Data= c(    NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00), .Dim=c(7, 2)), mPsi=1.00000E-03, mLambda0=5.00000E+00, mLambda1=5.00000E+00, p0=c(5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01), p1=c(5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01), p2=c(5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01, 5.00000E-01), c0=c(1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00), c1=c(1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00), c2=c(1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00), truePfs=c(5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00, 5.00000E+00))

list(Mu= structure(.Data= c(-5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00), .Dim=c(38, 2)), rhoW=9.98000E-01, branch0= structure(.Data= c(    NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00), .Dim=c(7, 2)), branch1= structure(.Data= c(    NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00), .Dim=c(7, 2)), branch2= structure(.Data= c(    NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00,     NA, 5.00000E+00), .Dim=c(7, 2)), mPsi=2.00000E+00, mLambda0=-5.00000E+00, mLambda1=-5.00000E+00, p0=c(1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00), p1=c(1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00), p2=c(1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00, 1.00000E+00), c0=c(0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00), c1=c(0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00), c2=c(0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00), truePfs=c(-5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00, -5.00000E+00))

